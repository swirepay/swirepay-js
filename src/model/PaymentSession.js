/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountRate from './AccountRate';
import Currency from './Currency';
import Customer from './Customer';
import PaymentMethod from './PaymentMethod';
import PaymentMethodType from './PaymentMethodType';

/**
 * The PaymentSession model module.
 * @module model/PaymentSession
 * @version 1.0.0
 */
class PaymentSession {
    /**
     * Constructs a new <code>PaymentSession</code>.
     * @alias module:model/PaymentSession
     */
    constructor() { 
        
        PaymentSession.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentSession</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentSession} obj Optional instance to populate.
     * @return {module:model/PaymentSession} The populated <code>PaymentSession</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentSession();

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('amountRefunded')) {
                obj['amountRefunded'] = ApiClient.convertToType(data['amountRefunded'], 'Number');
            }
            if (data.hasOwnProperty('amountUnCaptured')) {
                obj['amountUnCaptured'] = ApiClient.convertToType(data['amountUnCaptured'], 'Number');
            }
            if (data.hasOwnProperty('amountReceived')) {
                obj['amountReceived'] = ApiClient.convertToType(data['amountReceived'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('statementDescriptor')) {
                obj['statementDescriptor'] = ApiClient.convertToType(data['statementDescriptor'], 'String');
            }
            if (data.hasOwnProperty('receiptEmail')) {
                obj['receiptEmail'] = ApiClient.convertToType(data['receiptEmail'], 'String');
            }
            if (data.hasOwnProperty('receiptSms')) {
                obj['receiptSms'] = ApiClient.convertToType(data['receiptSms'], 'String');
            }
            if (data.hasOwnProperty('confirmMethod')) {
                obj['confirmMethod'] = ApiClient.convertToType(data['confirmMethod'], 'String');
            }
            if (data.hasOwnProperty('captureMethod')) {
                obj['captureMethod'] = ApiClient.convertToType(data['captureMethod'], 'String');
            }
            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'String');
            }
            if (data.hasOwnProperty('errorDescription')) {
                obj['errorDescription'] = ApiClient.convertToType(data['errorDescription'], 'String');
            }
            if (data.hasOwnProperty('refundReason')) {
                obj['refundReason'] = ApiClient.convertToType(data['refundReason'], 'String');
            }
            if (data.hasOwnProperty('refundNote')) {
                obj['refundNote'] = ApiClient.convertToType(data['refundNote'], 'String');
            }
            if (data.hasOwnProperty('disputeType')) {
                obj['disputeType'] = ApiClient.convertToType(data['disputeType'], 'String');
            }
            if (data.hasOwnProperty('disputeStatus')) {
                obj['disputeStatus'] = ApiClient.convertToType(data['disputeStatus'], 'String');
            }
            if (data.hasOwnProperty('respondBy')) {
                obj['respondBy'] = ApiClient.convertToType(data['respondBy'], 'String');
            }
            if (data.hasOwnProperty('paymentDate')) {
                obj['paymentDate'] = ApiClient.convertToType(data['paymentDate'], 'String');
            }
            if (data.hasOwnProperty('refundDate')) {
                obj['refundDate'] = ApiClient.convertToType(data['refundDate'], 'String');
            }
            if (data.hasOwnProperty('disputeDate')) {
                obj['disputeDate'] = ApiClient.convertToType(data['disputeDate'], 'String');
            }
            if (data.hasOwnProperty('amountDisputed')) {
                obj['amountDisputed'] = ApiClient.convertToType(data['amountDisputed'], 'Number');
            }
            if (data.hasOwnProperty('disputeFee')) {
                obj['disputeFee'] = ApiClient.convertToType(data['disputeFee'], 'Number');
            }
            if (data.hasOwnProperty('feeAmount')) {
                obj['feeAmount'] = ApiClient.convertToType(data['feeAmount'], 'Number');
            }
            if (data.hasOwnProperty('feeTax')) {
                obj['feeTax'] = ApiClient.convertToType(data['feeTax'], 'Number');
            }
            if (data.hasOwnProperty('net')) {
                obj['net'] = ApiClient.convertToType(data['net'], 'Number');
            }
            if (data.hasOwnProperty('mdr')) {
                obj['mdr'] = ApiClient.convertToType(data['mdr'], 'String');
            }
            if (data.hasOwnProperty('receiptNumber')) {
                obj['receiptNumber'] = ApiClient.convertToType(data['receiptNumber'], 'String');
            }
            if (data.hasOwnProperty('nextActionUrl')) {
                obj['nextActionUrl'] = ApiClient.convertToType(data['nextActionUrl'], 'String');
            }
            if (data.hasOwnProperty('psClientSecret')) {
                obj['psClientSecret'] = ApiClient.convertToType(data['psClientSecret'], 'String');
            }
            if (data.hasOwnProperty('authorizationId')) {
                obj['authorizationId'] = ApiClient.convertToType(data['authorizationId'], 'String');
            }
            if (data.hasOwnProperty('returnUrl')) {
                obj['returnUrl'] = ApiClient.convertToType(data['returnUrl'], 'String');
            }
            if (data.hasOwnProperty('secureStatus')) {
                obj['secureStatus'] = ApiClient.convertToType(data['secureStatus'], 'String');
            }
            if (data.hasOwnProperty('paymentLinkId')) {
                obj['paymentLinkId'] = ApiClient.convertToType(data['paymentLinkId'], 'String');
            }
            if (data.hasOwnProperty('paymentLinkGid')) {
                obj['paymentLinkGid'] = ApiClient.convertToType(data['paymentLinkGid'], 'String');
            }
            if (data.hasOwnProperty('mrn')) {
                obj['mrn'] = ApiClient.convertToType(data['mrn'], 'String');
            }
            if (data.hasOwnProperty('rrn')) {
                obj['rrn'] = ApiClient.convertToType(data['rrn'], 'String');
            }
            if (data.hasOwnProperty('paymentMethodType')) {
                obj['paymentMethodType'] = ApiClient.convertToType(data['paymentMethodType'], [PaymentMethodType]);
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = PaymentMethod.constructFromObject(data['paymentMethod']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = Customer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('accountRate')) {
                obj['accountRate'] = AccountRate.constructFromObject(data['accountRate']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} gid
 */
PaymentSession.prototype['gid'] = undefined;

/**
 * @member {String} createdAt
 */
PaymentSession.prototype['createdAt'] = undefined;

/**
 * @member {String} updatedAt
 */
PaymentSession.prototype['updatedAt'] = undefined;

/**
 * @member {Boolean} deleted
 */
PaymentSession.prototype['deleted'] = undefined;

/**
 * @member {String} status
 */
PaymentSession.prototype['status'] = undefined;

/**
 * @member {Number} amount
 */
PaymentSession.prototype['amount'] = undefined;

/**
 * @member {Number} amountRefunded
 */
PaymentSession.prototype['amountRefunded'] = undefined;

/**
 * @member {Number} amountUnCaptured
 */
PaymentSession.prototype['amountUnCaptured'] = undefined;

/**
 * @member {Number} amountReceived
 */
PaymentSession.prototype['amountReceived'] = undefined;

/**
 * @member {String} description
 */
PaymentSession.prototype['description'] = undefined;

/**
 * @member {String} statementDescriptor
 */
PaymentSession.prototype['statementDescriptor'] = undefined;

/**
 * @member {String} receiptEmail
 */
PaymentSession.prototype['receiptEmail'] = undefined;

/**
 * @member {String} receiptSms
 */
PaymentSession.prototype['receiptSms'] = undefined;

/**
 * @member {String} confirmMethod
 */
PaymentSession.prototype['confirmMethod'] = undefined;

/**
 * @member {String} captureMethod
 */
PaymentSession.prototype['captureMethod'] = undefined;

/**
 * @member {String} errorCode
 */
PaymentSession.prototype['errorCode'] = undefined;

/**
 * @member {String} errorDescription
 */
PaymentSession.prototype['errorDescription'] = undefined;

/**
 * @member {String} refundReason
 */
PaymentSession.prototype['refundReason'] = undefined;

/**
 * @member {String} refundNote
 */
PaymentSession.prototype['refundNote'] = undefined;

/**
 * @member {String} disputeType
 */
PaymentSession.prototype['disputeType'] = undefined;

/**
 * @member {String} disputeStatus
 */
PaymentSession.prototype['disputeStatus'] = undefined;

/**
 * @member {String} respondBy
 */
PaymentSession.prototype['respondBy'] = undefined;

/**
 * @member {String} paymentDate
 */
PaymentSession.prototype['paymentDate'] = undefined;

/**
 * @member {String} refundDate
 */
PaymentSession.prototype['refundDate'] = undefined;

/**
 * @member {String} disputeDate
 */
PaymentSession.prototype['disputeDate'] = undefined;

/**
 * @member {Number} amountDisputed
 */
PaymentSession.prototype['amountDisputed'] = undefined;

/**
 * @member {Number} disputeFee
 */
PaymentSession.prototype['disputeFee'] = undefined;

/**
 * @member {Number} feeAmount
 */
PaymentSession.prototype['feeAmount'] = undefined;

/**
 * @member {Number} feeTax
 */
PaymentSession.prototype['feeTax'] = undefined;

/**
 * @member {Number} net
 */
PaymentSession.prototype['net'] = undefined;

/**
 * @member {String} mdr
 */
PaymentSession.prototype['mdr'] = undefined;

/**
 * @member {String} receiptNumber
 */
PaymentSession.prototype['receiptNumber'] = undefined;

/**
 * @member {String} nextActionUrl
 */
PaymentSession.prototype['nextActionUrl'] = undefined;

/**
 * @member {String} psClientSecret
 */
PaymentSession.prototype['psClientSecret'] = undefined;

/**
 * @member {String} authorizationId
 */
PaymentSession.prototype['authorizationId'] = undefined;

/**
 * @member {String} returnUrl
 */
PaymentSession.prototype['returnUrl'] = undefined;

/**
 * @member {String} secureStatus
 */
PaymentSession.prototype['secureStatus'] = undefined;

/**
 * @member {String} paymentLinkId
 */
PaymentSession.prototype['paymentLinkId'] = undefined;

/**
 * @member {String} paymentLinkGid
 */
PaymentSession.prototype['paymentLinkGid'] = undefined;

/**
 * @member {String} mrn
 */
PaymentSession.prototype['mrn'] = undefined;

/**
 * @member {String} rrn
 */
PaymentSession.prototype['rrn'] = undefined;

/**
 * @member {Array.<module:model/PaymentMethodType>} paymentMethodType
 */
PaymentSession.prototype['paymentMethodType'] = undefined;

/**
 * @member {module:model/PaymentMethod} paymentMethod
 */
PaymentSession.prototype['paymentMethod'] = undefined;

/**
 * @member {module:model/Currency} currency
 */
PaymentSession.prototype['currency'] = undefined;

/**
 * @member {module:model/Customer} customer
 */
PaymentSession.prototype['customer'] = undefined;

/**
 * @member {module:model/AccountRate} accountRate
 */
PaymentSession.prototype['accountRate'] = undefined;






export default PaymentSession;

