/**
 * Swirepay Payment API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * OpenAPI spec version: 1.4.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Balance from './Balance';

/**
* The BalanceResponseEntity model module.
* @module model/BalanceResponseEntity
* @version 1.4.0
*/
export default class BalanceResponseEntity {
    /**
    * Constructs a new <code>BalanceResponseEntity</code>.
    * @alias module:model/BalanceResponseEntity
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>BalanceResponseEntity</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/BalanceResponseEntity} obj Optional instance to populate.
    * @return {module:model/BalanceResponseEntity} The populated <code>BalanceResponseEntity</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BalanceResponseEntity();
                        
            
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], [Balance]);
            }
        }
        return obj;
    }

    /**
    * @member {Array.<module:model/Balance>} content
    */
    'content' = undefined;




}
