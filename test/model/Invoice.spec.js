/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwirepayApi);
  }
}(this, function(expect, SwirepayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwirepayApi.Invoice();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Invoice', function() {
    it('should create an instance of Invoice', function() {
      // uncomment below and update the code to test Invoice
      //var instane = new SwirepayApi.Invoice();
      //expect(instance).to.be.a(SwirepayApi.Invoice);
    });

    it('should have the property gid (base name: "gid")', function() {
      // uncomment below and update the code to test the property gid
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "invoiceNumber")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodType (base name: "paymentMethodType")', function() {
      // uncomment below and update the code to test the property paymentMethodType
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property statementDescriptor (base name: "statementDescriptor")', function() {
      // uncomment below and update the code to test the property statementDescriptor
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentDate (base name: "paymentDate")', function() {
      // uncomment below and update the code to test the property paymentDate
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property lastProcessed (base name: "lastProcessed")', function() {
      // uncomment below and update the code to test the property lastProcessed
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property noRetries (base name: "noRetries")', function() {
      // uncomment below and update the code to test the property noRetries
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentDueDate (base name: "paymentDueDate")', function() {
      // uncomment below and update the code to test the property paymentDueDate
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invoicePdfKey (base name: "invoicePdfKey")', function() {
      // uncomment below and update the code to test the property invoicePdfKey
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property issueDate (base name: "issueDate")', function() {
      // uncomment below and update the code to test the property issueDate
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property customerNote (base name: "customerNote")', function() {
      // uncomment below and update the code to test the property customerNote
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property daysUntilDue (base name: "daysUntilDue")', function() {
      // uncomment below and update the code to test the property daysUntilDue
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentProcessDate (base name: "paymentProcessDate")', function() {
      // uncomment below and update the code to test the property paymentProcessDate
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property redirectUrl (base name: "redirectUrl")', function() {
      // uncomment below and update the code to test the property redirectUrl
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentSession (base name: "paymentSession")', function() {
      // uncomment below and update the code to test the property paymentSession
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "paymentMethod")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invoiceLineItems (base name: "invoiceLineItems")', function() {
      // uncomment below and update the code to test the property invoiceLineItems
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "billingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress (base name: "shippingAddress")', function() {
      // uncomment below and update the code to test the property shippingAddress
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invoiceLinks (base name: "invoiceLinks")', function() {
      // uncomment below and update the code to test the property invoiceLinks
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property subscription (base name: "subscription")', function() {
      // uncomment below and update the code to test the property subscription
      //var instance = new SwirepayApi.Invoice();
      //expect(instance).to.be();
    });

  });

}));
