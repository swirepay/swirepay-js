/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwirepayApi);
  }
}(this, function(expect, SwirepayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwirepayApi.Bin();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Bin', function() {
    it('should create an instance of Bin', function() {
      // uncomment below and update the code to test Bin
      //var instane = new SwirepayApi.Bin();
      //expect(instance).to.be.a(SwirepayApi.Bin);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property bin (base name: "bin")', function() {
      // uncomment below and update the code to test the property bin
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property cardLength (base name: "cardLength")', function() {
      // uncomment below and update the code to test the property cardLength
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property scheme (base name: "scheme")', function() {
      // uncomment below and update the code to test the property scheme
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property bankName (base name: "bankName")', function() {
      // uncomment below and update the code to test the property bankName
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property bankUrl (base name: "bankUrl")', function() {
      // uncomment below and update the code to test the property bankUrl
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property bankCity (base name: "bankCity")', function() {
      // uncomment below and update the code to test the property bankCity
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property luhn (base name: "luhn")', function() {
      // uncomment below and update the code to test the property luhn
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property prepaid (base name: "prepaid")', function() {
      // uncomment below and update the code to test the property prepaid
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new SwirepayApi.Bin();
      //expect(instance).to.be();
    });

  });

}));
