/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwirepayApi);
  }
}(this, function(expect, SwirepayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwirepayApi.Card();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Card', function() {
    it('should create an instance of Card', function() {
      // uncomment below and update the code to test Card
      //var instane = new SwirepayApi.Card();
      //expect(instance).to.be.a(SwirepayApi.Card);
    });

    it('should have the property gid (base name: "gid")', function() {
      // uncomment below and update the code to test the property gid
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property terminal (base name: "terminal")', function() {
      // uncomment below and update the code to test the property terminal
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property _number (base name: "number")', function() {
      // uncomment below and update the code to test the property _number
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property scheme (base name: "scheme")', function() {
      // uncomment below and update the code to test the property scheme
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property expiryMonth (base name: "expiryMonth")', function() {
      // uncomment below and update the code to test the property expiryMonth
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property expiryYear (base name: "expiryYear")', function() {
      // uncomment below and update the code to test the property expiryYear
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property fingerprint (base name: "fingerprint")', function() {
      // uncomment below and update the code to test the property fingerprint
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property lastFour (base name: "lastFour")', function() {
      // uncomment below and update the code to test the property lastFour
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property cvv (base name: "cvv")', function() {
      // uncomment below and update the code to test the property cvv
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property pin (base name: "pin")', function() {
      // uncomment below and update the code to test the property pin
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property expiresAt (base name: "expiresAt")', function() {
      // uncomment below and update the code to test the property expiresAt
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property present (base name: "present")', function() {
      // uncomment below and update the code to test the property present
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property bin (base name: "bin")', function() {
      // uncomment below and update the code to test the property bin
      //var instance = new SwirepayApi.Card();
      //expect(instance).to.be();
    });

  });

}));
