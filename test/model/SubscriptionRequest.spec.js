/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwirepayApi);
  }
}(this, function(expect, SwirepayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwirepayApi.SubscriptionRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubscriptionRequest', function() {
    it('should create an instance of SubscriptionRequest', function() {
      // uncomment below and update the code to test SubscriptionRequest
      //var instane = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be.a(SwirepayApi.SubscriptionRequest);
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property customerGid (base name: "customerGid")', function() {
      // uncomment below and update the code to test the property customerGid
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planGid (base name: "planGid")', function() {
      // uncomment below and update the code to test the property planGid
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planTotalPayments (base name: "planTotalPayments")', function() {
      // uncomment below and update the code to test the property planTotalPayments
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planStartDate (base name: "planStartDate")', function() {
      // uncomment below and update the code to test the property planStartDate
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planEndDate (base name: "planEndDate")', function() {
      // uncomment below and update the code to test the property planEndDate
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planAmount (base name: "planAmount")', function() {
      // uncomment below and update the code to test the property planAmount
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodType (base name: "paymentMethodType")', function() {
      // uncomment below and update the code to test the property paymentMethodType
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property statementDescription (base name: "statementDescription")', function() {
      // uncomment below and update the code to test the property statementDescription
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property emailRecipientList (base name: "emailRecipientList")', function() {
      // uncomment below and update the code to test the property emailRecipientList
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planBillingFrequency (base name: "planBillingFrequency")', function() {
      // uncomment below and update the code to test the property planBillingFrequency
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property planBillingPeriod (base name: "planBillingPeriod")', function() {
      // uncomment below and update the code to test the property planBillingPeriod
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property redirectUrl (base name: "redirectUrl")', function() {
      // uncomment below and update the code to test the property redirectUrl
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "billingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress (base name: "shippingAddress")', function() {
      // uncomment below and update the code to test the property shippingAddress
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

    it('should have the property invoiceLineItems (base name: "invoiceLineItems")', function() {
      // uncomment below and update the code to test the property invoiceLineItems
      //var instance = new SwirepayApi.SubscriptionRequest();
      //expect(instance).to.be();
    });

  });

}));
