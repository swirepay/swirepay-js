/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwirepayApi);
  }
}(this, function(expect, SwirepayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwirepayApi.Subscription();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Subscription', function() {
    it('should create an instance of Subscription', function() {
      // uncomment below and update the code to test Subscription
      //var instane = new SwirepayApi.Subscription();
      //expect(instance).to.be.a(SwirepayApi.Subscription);
    });

    it('should have the property gid (base name: "gid")', function() {
      // uncomment below and update the code to test the property gid
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planQuantity (base name: "planQuantity")', function() {
      // uncomment below and update the code to test the property planQuantity
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planTotalPayments (base name: "planTotalPayments")', function() {
      // uncomment below and update the code to test the property planTotalPayments
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planStartDate (base name: "planStartDate")', function() {
      // uncomment below and update the code to test the property planStartDate
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planEndDate (base name: "planEndDate")', function() {
      // uncomment below and update the code to test the property planEndDate
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planAmount (base name: "planAmount")', function() {
      // uncomment below and update the code to test the property planAmount
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodType (base name: "paymentMethodType")', function() {
      // uncomment below and update the code to test the property paymentMethodType
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property statementDescription (base name: "statementDescription")', function() {
      // uncomment below and update the code to test the property statementDescription
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property emailRecipientList (base name: "emailRecipientList")', function() {
      // uncomment below and update the code to test the property emailRecipientList
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property upfrontAmount (base name: "upfrontAmount")', function() {
      // uncomment below and update the code to test the property upfrontAmount
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property lastProcessed (base name: "lastProcessed")', function() {
      // uncomment below and update the code to test the property lastProcessed
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property nextPaymentDate (base name: "nextPaymentDate")', function() {
      // uncomment below and update the code to test the property nextPaymentDate
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property totalSuccessfulPayments (base name: "totalSuccessfulPayments")', function() {
      // uncomment below and update the code to test the property totalSuccessfulPayments
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property billingAmount (base name: "billingAmount")', function() {
      // uncomment below and update the code to test the property billingAmount
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planBillingFrequency (base name: "planBillingFrequency")', function() {
      // uncomment below and update the code to test the property planBillingFrequency
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property planBillingPeriod (base name: "planBillingPeriod")', function() {
      // uncomment below and update the code to test the property planBillingPeriod
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property redirectUrl (base name: "redirectUrl")', function() {
      // uncomment below and update the code to test the property redirectUrl
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property plan (base name: "plan")', function() {
      // uncomment below and update the code to test the property plan
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "paymentMethod")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionLineItems (base name: "subscriptionLineItems")', function() {
      // uncomment below and update the code to test the property subscriptionLineItems
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionLinks (base name: "subscriptionLinks")', function() {
      // uncomment below and update the code to test the property subscriptionLinks
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionButton (base name: "subscriptionButton")', function() {
      // uncomment below and update the code to test the property subscriptionButton
      //var instance = new SwirepayApi.Subscription();
      //expect(instance).to.be();
    });

  });

}));
