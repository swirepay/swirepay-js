/**
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwirepayApi);
  }
}(this, function(expect, SwirepayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwirepayApi.PaymentSession();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentSession', function() {
    it('should create an instance of PaymentSession', function() {
      // uncomment below and update the code to test PaymentSession
      //var instane = new SwirepayApi.PaymentSession();
      //expect(instance).to.be.a(SwirepayApi.PaymentSession);
    });

    it('should have the property gid (base name: "gid")', function() {
      // uncomment below and update the code to test the property gid
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property amountRefunded (base name: "amountRefunded")', function() {
      // uncomment below and update the code to test the property amountRefunded
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property amountUnCaptured (base name: "amountUnCaptured")', function() {
      // uncomment below and update the code to test the property amountUnCaptured
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property amountReceived (base name: "amountReceived")', function() {
      // uncomment below and update the code to test the property amountReceived
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property statementDescriptor (base name: "statementDescriptor")', function() {
      // uncomment below and update the code to test the property statementDescriptor
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property receiptEmail (base name: "receiptEmail")', function() {
      // uncomment below and update the code to test the property receiptEmail
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property receiptSms (base name: "receiptSms")', function() {
      // uncomment below and update the code to test the property receiptSms
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property confirmMethod (base name: "confirmMethod")', function() {
      // uncomment below and update the code to test the property confirmMethod
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property captureMethod (base name: "captureMethod")', function() {
      // uncomment below and update the code to test the property captureMethod
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property errorCode (base name: "errorCode")', function() {
      // uncomment below and update the code to test the property errorCode
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property errorDescription (base name: "errorDescription")', function() {
      // uncomment below and update the code to test the property errorDescription
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property refundReason (base name: "refundReason")', function() {
      // uncomment below and update the code to test the property refundReason
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property refundNote (base name: "refundNote")', function() {
      // uncomment below and update the code to test the property refundNote
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property disputeType (base name: "disputeType")', function() {
      // uncomment below and update the code to test the property disputeType
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property disputeStatus (base name: "disputeStatus")', function() {
      // uncomment below and update the code to test the property disputeStatus
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property respondBy (base name: "respondBy")', function() {
      // uncomment below and update the code to test the property respondBy
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property paymentDate (base name: "paymentDate")', function() {
      // uncomment below and update the code to test the property paymentDate
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property refundDate (base name: "refundDate")', function() {
      // uncomment below and update the code to test the property refundDate
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property disputeDate (base name: "disputeDate")', function() {
      // uncomment below and update the code to test the property disputeDate
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property amountDisputed (base name: "amountDisputed")', function() {
      // uncomment below and update the code to test the property amountDisputed
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property disputeFee (base name: "disputeFee")', function() {
      // uncomment below and update the code to test the property disputeFee
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property feeAmount (base name: "feeAmount")', function() {
      // uncomment below and update the code to test the property feeAmount
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property feeTax (base name: "feeTax")', function() {
      // uncomment below and update the code to test the property feeTax
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property net (base name: "net")', function() {
      // uncomment below and update the code to test the property net
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property mdr (base name: "mdr")', function() {
      // uncomment below and update the code to test the property mdr
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property receiptNumber (base name: "receiptNumber")', function() {
      // uncomment below and update the code to test the property receiptNumber
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property nextActionUrl (base name: "nextActionUrl")', function() {
      // uncomment below and update the code to test the property nextActionUrl
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property psClientSecret (base name: "psClientSecret")', function() {
      // uncomment below and update the code to test the property psClientSecret
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property authorizationId (base name: "authorizationId")', function() {
      // uncomment below and update the code to test the property authorizationId
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property returnUrl (base name: "returnUrl")', function() {
      // uncomment below and update the code to test the property returnUrl
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property secureStatus (base name: "secureStatus")', function() {
      // uncomment below and update the code to test the property secureStatus
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property paymentLinkId (base name: "paymentLinkId")', function() {
      // uncomment below and update the code to test the property paymentLinkId
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property paymentLinkGid (base name: "paymentLinkGid")', function() {
      // uncomment below and update the code to test the property paymentLinkGid
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property mrn (base name: "mrn")', function() {
      // uncomment below and update the code to test the property mrn
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property rrn (base name: "rrn")', function() {
      // uncomment below and update the code to test the property rrn
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodType (base name: "paymentMethodType")', function() {
      // uncomment below and update the code to test the property paymentMethodType
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "paymentMethod")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

    it('should have the property accountRate (base name: "accountRate")', function() {
      // uncomment below and update the code to test the property accountRate
      //var instance = new SwirepayApi.PaymentSession();
      //expect(instance).to.be();
    });

  });

}));
